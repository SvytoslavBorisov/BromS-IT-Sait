// src/instrumentation.ts
export async function register() {
  if (process.env.NODE_ENV !== 'production') return;
  // –≠—Ç–æ—Ç —Ñ–∞–π–ª Next –∏—Å–ø–æ–ª–Ω—è–µ—Ç –≤–æ –≤—Ä–µ–º—è next build (—á–µ—Ä–µ–∑ instrumentationHook).
  const orig = globalThis.fetch;

  globalThis.fetch = (async (input: any, init?: any) => {
    const url = typeof input === 'string' ? input : input?.url;
    const err = new Error(
      `‚ùå FETCH DURING BUILD: ${url}\n(–∑–∞–ø—Ä–µ—â–µ–Ω–æ –Ω–∞ —Å–±–æ—Ä–∫–µ ‚Äî —Å–º. —Å—Ç–µ–∫ –Ω–∏–∂–µ)`
    );
    // –ü–µ—á–∞—Ç–∞–µ–º –ø–æ–Ω—è—Ç–Ω—ã–π —Å—Ç–µ–∫ —Å –ø—É—Ç—è–º–∏ —Ñ–∞–π–ª–æ–≤
    console.error(err.stack);
    // –°—Ä—ã–≤ —Å–±–æ—Ä–∫–∏ ‚Äî —Å—Ä–∞–∑—É —É–≤–∏–¥–∏—à—å, –∫–∞–∫–æ–π –º–æ–¥—É–ª—å –¥–µ—Ä–Ω—É–ª —Å–µ—Ç—å
    throw err;
  }) as typeof fetch;

  // —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å, —á—Ç–æ —Ö—É–∫ —Ä–µ–∞–ª—å–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª—Å—è
  // (Next –∏–Ω–æ–≥–¥–∞ –≥–ª—É—à–∏—Ç console.log ‚Äî –Ω–æ error –ø—Ä–æ—Ö–æ–¥–∏—Ç)
  console.error('üîß instrumentation.ts registered for production build');
}
